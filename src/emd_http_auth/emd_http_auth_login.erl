%%%-------------------------------------------------------------------
%% This file is part of ematrixd.
%%
%% ematrixd is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
%% ematrixd is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with ematrixd.  If not, see <https://www.gnu.org/licenses/>.
%%%-------------------------------------------------------------------

%%%-------------------------------------------------------------------
%%% @author  Anton Vilhelm Ásgeirsson <anton.v.asgeirsson@gmail.com>
%%% @copyright (C) 2020, Anton Vilhelm Ásgeirsson
%%% @doc Login request handler for the Matrix Client-Server Spec.
%%% @end
%%%-------------------------------------------------------------------

-module(emd_http_auth_login).
-export([
         init/2,
         allowed_methods/2,
         content_types_provided/2,
         content_types_accepted/2,
         handle_request/2
        ]).

%% API
init(Req, Opts) ->
    {cowboy_rest, Req, Opts}.

allowed_methods(Req, State) ->
    Methods = [<<"GET">>, <<"POST">>],
    {Methods, Req, State}.

content_types_provided(Req, State) ->
    {[
      {<<"application/json">>, handle_request}
     ], Req, State}.

content_types_accepted(Req, State) ->
    {[
      {<<"application/json">>, handle_request}
     ], Req, State}.

%% Internal
handle_request(Req, State) ->
    Method = cowboy_req:method(Req),
    {Body, Req1, State1} = case Method of
                               <<"GET">> ->
                                   get_login(Req, State);
                               <<"POST">> ->
                                   post_login(Req, State);
                               _ ->
                                   wrong_method(Req, State)
                           end,
    {Body, Req1, State1}.

%%%-------------------------------------------------------------------
%% 5.4.1 GET /_matrix/client/r0/login
%% Gets the homeserver's supported login types to authenticate users.
%% Clients should pick one of these and supply it as the type when
%% logging in.
%%%-------------------------------------------------------------------
get_login(Req, State) ->
    Body = <<"{\"login_get_implement\": \"me\"}">>,
    {Body, Req, State}.

%%%-------------------------------------------------------------------
%% 5.4.2 POST /_matrix/client/r0/login
%% Authenticates the user, and issues an access token they can use to
%% authorize themself in subsequent requests.
%%
%% If the client does not supply a device_id, the server must
%% auto-generate one.
%%
%% The returned access token must be associated with the device_id
%% supplied by the client or generated by the server. The server may
%% invalidate any access token previously associated with that device.
%% See https://matrix.org/docs/spec/client_server/latest#relationship-between-access-tokens-and-devices
%%%-------------------------------------------------------------------
post_login(Req, State) ->
    Body = <<"{\"login_post_implement\": \"me\"}">>,
    cowboy_req:reply(200, #{<<"content-type">> => <<"application/json">>}, Body, Req),
    {stop, Req, State}.

wrong_method(Req, State) ->
    Body = <<"{\"error\": \"emd_method_not_allowed\"}">>,
    cowboy_req:reply(405, #{<<"content-type">> => <<"application/json">>}, Body, Req),
    {stop, Req, State}.

